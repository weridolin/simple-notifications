// Code generated by goctl. DO NOT EDIT.
package types

type UserInfo struct {
	Username     string   `json:"username"`
	Email        string   `json:"email"`
	Phone        string   `json:"phone"`
	Avatar       string   `json:"avatar"`
	Role         []string `json:"role"`
	IsSuperAdmin bool     `json:"is_super_admin"`
	Age          int      `json:"age"`
	Gender       int8     `json:"gender"`
}

type EmailNotifier struct {
	Sender   string   `json:"sender"`
	PWD      string   `json:"pwd"`
	Receiver []string `json:"receiver"`
	Content  string   `json:"content"`
}

type CreateEmailNotifierReq struct {
	Sender   string   `json:"sender"`
	PWD      string   `json:"pwd"`
	Receiver []string `json:"receiver"`
	Content  string   `json:"content"`
}

type CreateEmailNotifierResp struct {
	BaseResponse
	Data EmailNotifier `json:"data"`
}

type DeleteEmailNotifierReq struct {
	Id     int            `path:"id"`

}


type DeleteEmailNotifierResp struct {
	BaseResponse
}

type UpdateEmailNotifierReq struct {
	ID	   int      	`path:"id"`
	Sender   string   `json:"sender,optional"`
	PWD      string   `json:"pwd,optional"`
	Receiver []string `json:"receiver,optional"`
	Content  string   `json:"content,optional"`
}

type UpdateEmailNotifierResp struct {
	BaseResponse
	Data EmailNotifier `json:"data"`
}

type QueryEmailNotifierResp struct {
	BaseResponse
	Data []*EmailNotifier `json:"data"`
}

type QueryEmailNotifierReq struct {
	PaginationParams
}

type BindEmailNotifierToTaskReq struct {
}

type BindEmailNotifierToTaskResp struct {
}

type BaseResponse struct {
	Code int         `json:"code"`
	Msg  string      `json:"msg"`
	Data interface{} `json:"data"`
}

type PaginationParams struct {
	Page int `query:"page" validate:"required,min=1"`
	Size int `query:"size" validate:"required,min=1,max=1000"`
}
